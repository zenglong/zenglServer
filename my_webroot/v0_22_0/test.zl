use builtin,request,openssl;

def RSA_PUBLIC 1;
def RSA_PRIVATE 0;

def USE_EVP 1;

def RSA_SIGN_SHA256 5;

def TRUE 1;
def FALSE 0;

def NULL 0;

fun exit(msg)
	global is_cmd,br;
	print msg + br;
	print '</body></html>';
	bltExit();
endfun

print '<!Doctype html>';
print '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8" /></head><body>';

if(bltIsRunInCmd())
	exit('must be run in website');
else
	is_cmd = FALSE;
	br = '<br/>';
	print 'now in website' + br;
endif

body_array = rqtGetBodyAsArray();
for(i=0;bltIterArray(body_array,&i,&k,&v);)
	print k +": " + v + br;
endfor

biz_content_arr['product_code'] = 'FAST_INSTANT_TRADE_PAY';
biz_content_arr['body'] = body_array['body'];
biz_content_arr['subject'] = body_array['subject'];
biz_content_arr['total_amount'] = body_array['total_amount'];
biz_content_arr['out_trade_no'] = body_array['out_trade_no'];
biz_content = bltJsonEncode(biz_content_arr);

print 'biz_content:' + biz_content + br;

config['app_id'] = '';
config['notify_url'] = 'http://domain_url/notify_url.php';
config['return_url'] = 'http://domain_url/return_url.php';
config['sign_type'] = 'RSA2';
config['gateway_url'] = 'https://openapi.alipaydev.com/gateway.do';

config['merchant_private_key'] = '';

config['alipay_public_key'] = '';

params['alipay_sdk'] = 'alipay-sdk-php-20161101';
params['app_id'] = config['app_id'];
params['biz_content'] = biz_content;
params['charset'] = 'UTF-8';
params['format'] = 'json';
params['method'] = 'alipay.trade.page.pay';
params['notify_url'] = config['notify_url'];
params['return_url'] = config['return_url'];
params['sign_type'] = config['sign_type'];
params['timestamp'] = '2020-06-22 04:15:55';
params['version'] = '1.0';

str_to_be_signed = '';

for(i=0;bltIterArray(params,&i,&k,&v);)
	if(i == 1)
		str_to_be_signed += k + '=' + v;
	else
		str_to_be_signed += '&' + k + '=' + v;
	endif
endfor

print 'str_to_be_signed:' + bltHtmlEscape(str_to_be_signed) + br;

key_content = config['merchant_private_key'];
key = opensslReadKey(key_content, RSA_PRIVATE);
if(key == NULL)
	exit('read key failed: ' + opensslGetError());
endif

// ret = opensslSign(str_to_be_signed, -1, key, &sign, &sign_len, RSA_SIGN_SHA256);
ret = opensslSign(str_to_be_signed, -1, key, &sign, &sign_len, RSA_SIGN_SHA256, USE_EVP);
if(!ret)
	exit('sign failed: ' + opensslGetError());
endif

sign_encode = bltBase64Encode(sign);

print 'sign_encode:' + sign_encode + br;

print '</body></html>';
