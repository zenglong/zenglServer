use builtin,request,openssl,curl,pcre;

inc 'config.zl';
inc 'func.zl';

gl_use_html = TRUE;

print '<!Doctype html>';
print '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8" /></head><body>';

if(bltIsRunInCmd())
	exit('must be run in website');
else
	is_cmd = FALSE;
	br = '<br/>';
endif

body_array = rqtGetBodyAsArray();

immediate_pay = FALSE;
if(bltStr(&body_array['sb']) == '测试立即付款')
	immediate_pay = TRUE;
endif

for(i=0;bltIterArray(body_array,&i,&k,&v);)
	print_msg(k +": " + v + br);
endfor

action = bltStr(&body_array['action']);
use_curl = TRUE;
if(action == 'query')
	biz_content_arr['out_trade_no'] = body_array['out_trade_no'];
	biz_content_arr['trade_no'] = body_array['trade_no'];
	method = 'alipay.trade.query';
elif(action == 'refund')
	biz_content_arr['out_trade_no'] = body_array['out_trade_no'];
	biz_content_arr['trade_no'] = body_array['trade_no'];
	biz_content_arr['refund_amount'] = body_array['refund_amount'];
	biz_content_arr['refund_reason'] = body_array['refund_reason'];
	biz_content_arr['out_request_no'] = body_array['out_request_no'];
	method = 'alipay.trade.refund';
elif(action == 'refund_query')
	biz_content_arr['out_trade_no'] = body_array['out_trade_no'];
	biz_content_arr['trade_no'] = body_array['trade_no'];
	biz_content_arr['out_request_no'] = body_array['out_request_no'];
	method = 'alipay.trade.fastpay.refund.query';
elif(action == 'close')
	biz_content_arr['out_trade_no'] = body_array['out_trade_no'];
	biz_content_arr['trade_no'] = body_array['trade_no'];
	method = 'alipay.trade.close';
else
	biz_content_arr['product_code'] = 'FAST_INSTANT_TRADE_PAY';
	biz_content_arr['body'] = body_array['body'];
	biz_content_arr['subject'] = body_array['subject'];
	biz_content_arr['total_amount'] = body_array['total_amount'];
	biz_content_arr['out_trade_no'] = body_array['out_trade_no'];
	method = 'alipay.trade.page.pay';
	use_curl = FALSE;
endif

biz_content = bltJsonEncode(biz_content_arr);
print_msg('biz_content:' + biz_content + br + br);

params['biz_content'] = biz_content;
params['method'] = method;
params['alipay_sdk'] = 'alipay-sdk-zengl-20200627';
params['charset'] = 'UTF-8';
params['format'] = 'json';
params['version'] = '1.0';
params['timestamp'] = bltDate('%Y-%m-%d %H:%M:%S');
params['app_id'] = config['app_id'];
params['sign_type'] = config['sign_type'];
params['notify_url'] = config['notify_url'];
params['return_url'] = config['return_url'];

sort_params =  sort_array(params);

str_to_be_signed = get_sign_data(sort_params);

print_msg('str_to_be_signed:' + bltHtmlEscape(str_to_be_signed) + br + br);

key_content = add_key_header_footer(config['merchant_private_key'], 64, '-----BEGIN RSA PRIVATE KEY-----', '-----END RSA PRIVATE KEY-----');
key = opensslReadKey(key_content, RSA_PRIVATE);
if(key == NULL)
	exit('read key failed: ' + opensslGetError());
endif

ret = opensslSign(str_to_be_signed, -1, key, &sign, &sign_len, RSA_SIGN_SHA256, USE_EVP);
if(!ret)
	exit('sign failed: ' + opensslGetError());
endif

sign_encode = bltBase64Encode(sign);

print_msg('sign_encode:' + sign_encode + br + br);

sort_params['sign'] = sign_encode;

if(use_curl)
	curl_handle = curlEasyInit();
	curlEasySetopt(curl_handle, 'URL', config['gateway_url'] + "?charset=" + sort_params['charset']);
	curlEasySetopt(curl_handle, 'FOLLOWLOCATION', TRUE);
	curlEasySetopt(curl_handle, 'SSL_VERIFYPEER', FALSE);
	curlEasySetopt(curl_handle, 'SSL_VERIFYHOST', FALSE);
	curlEasySetopt(curl_handle, 'TIMEOUT', 30);
	submit_post = '';
	for(i=0;bltIterArray(sort_params,&i,&k,&v);)
		submit_post += k + '=' + bltUrlEncode(v);
		if(i < bltCount(sort_params))
			submit_post += '&';
		endif
	endfor
	curlEasySetopt(curl_handle, 'POSTFIELDS', submit_post);
	ret = curlEasyPerform(curl_handle, &content);
	if(ret == 0)
		print 'curl response content: ' + content + br;
		con_decode = bltJsonDecode(content);
		method_response = bltStrReplace(method, '.', '_') + '_response';
		print 'method_response: ' + method_response + br + br;
		response_sign = con_decode['sign'];
		print 'response_sign: ' + response_sign + br + br;
		match_ret = pcreMatch('^{"'+method_response+'":(.*?),"sign":.*?$', content, &results);
		if(match_ret)
			response_data = results[1];
		else
			response_data = '';
		endif
		print 'response_data: ' + (response_data != '' ? response_data : '没有匹配到需要验签的数据') + br + br;
		key_pub_content = add_key_header_footer(config['alipay_public_key'], 64, '-----BEGIN PUBLIC KEY-----', '-----END PUBLIC KEY-----');
		ret = check_sign(key_pub_content, response_data, response_sign);
		if(ret)
			print '验签成功,格式化数据如下：' + br;
			for(j=0;bltIterArray(con_decode[method_response],&j,&inner_k,&inner_v);)
				print ' -- ' + inner_k +": " + inner_v + br;
			endfor
		else
			print '验签失败';
		endif
	else
		print 'curl error: ' + curlEasyStrError(ret);
	endif
	curlEasyCleanup(curl_handle);
else
	if(immediate_pay)
		hidden_style = " style = 'display:none;'";
	else
		hidden_style = '';
	endif
	submit_html = "<div"+hidden_style+"><form id='alipaysubmit' name='alipaysubmit' action='" + 
			config['gateway_url'] + "?charset=" + sort_params['charset'] + "' method='POST'>\n";
	for(i=0;bltIterArray(sort_params,&i,&k,&v);)
		v = bltStrReplace(v, "'", "&apos;");
		submit_html += "<div><input name='" + k + "' value='" + v + "'/></div>\n";
	endfor
	submit_html += "<div><input type='submit' value='ok'></div>\n</form></div>";
	if(immediate_pay)
		submit_html += "<div>正在跳转到支付宝支付页面...</div><script>document.forms['alipaysubmit'].submit();</script>";
	endif
	print submit_html;
endif

print '</body></html>';
